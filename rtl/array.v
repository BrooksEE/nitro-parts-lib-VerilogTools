`define PACK_1DARRAY(GEN_VAR, PK_WIDTH,PK_LEN,PK_SRC,PK_DEST)    genvar GEN_VAR; generate for (GEN_VAR=0; GEN_VAR<(PK_LEN); GEN_VAR=GEN_VAR+1) begin assign PK_DEST[((PK_WIDTH)*GEN_VAR+((PK_WIDTH)-1)):((PK_WIDTH)*GEN_VAR)] = PK_SRC[GEN_VAR][((PK_WIDTH)-1):0]; end endgenerate

`define UNPACK_1DARRAY(GEN_VAR, PK_WIDTH,PK_LEN,PK_DEST,PK_SRC)  genvar GEN_VAR; generate for (GEN_VAR=0; GEN_VAR<(PK_LEN); GEN_VAR=GEN_VAR+1) begin assign PK_DEST[GEN_VAR][((PK_WIDTH)-1):0] = PK_SRC[((PK_WIDTH)*GEN_VAR+(PK_WIDTH-1)):((PK_WIDTH)*GEN_VAR)]; end endgenerate

`define PACK_2DARRAY(GEN_VAR, PK_WIDTH, PK_DIM0, PK_DIM1, PK_SRC,PK_DEST)    genvar GEN_VAR0, GEN_VAR1; generate for (GEN_VAR0=0; GEN_VAR0<(PK_DIM0); GEN_VAR0=GEN_VAR0+1) begin; for (GEN_VAR1=0; GEN_VAR1<(PK_DIM1); GEN_VAR1=GEN_VAR1+1) begin assign PK_DEST[(GEN_VAR0*(PK_DIM1) + GEN_VAR1 + 1)*PK_WIDTH-1:(GEN_VAR0*(PK_DIM1) + GEN_VAR1)*PK_WIDTH ] = PK_SRC[GEN_VAR0][GEN_VAR1][((PK_WIDTH)-1):0]; end end endgenerate

`define UNPACK_2DARRAY(GEN_VAR, PK_WIDTH,PK_DIM0,PK_DIM1,PK_DEST,PK_SRC)  genvar GEN_VAR0,GEN_VAR1; generate for (GEN_VAR0=0; GEN_VAR0<(PK_DIM0); GEN_VAR0=GEN_VAR0+1) begin for (GEN_VAR1=0; GEN_VAR1<(PK_DIM1); GEN_VAR1=GEN_VAR1+1) begin assign PK_DEST[GEN_VAR0][GEN_VAR1][((PK_WIDTH)-1):0] = PK_SRC[(GEN_VAR0*(PK_DIM1) + GEN_VAR1 + 1)*PK_WIDTH-1:(GEN_VAR0*(PK_DIM1) + GEN_VAR1)*PK_WIDTH]; end end endgenerate
